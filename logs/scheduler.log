[INFO ] [15-Jun-2020 18:28:29.807] [           main Thread]-[.examples.Tester$CassandraDataSourceImpl.getSession               (){179}]- **************creating session******************
[INFO ] [15-Jun-2020 18:28:29.808] [           main Thread]-[.examples.Tester$CassandraDataSourceImpl.createSession            (){142}]- Creating Cassandra session. Server : 127.0.0.1, port : 9042, KeySpace : gsp
[INFO ] [15-Jun-2020 18:28:29.815] [           main Thread]-[.datastax.driver.core.GuavaCompatibility.selectImplementation     (){132}]- Detected Guava >= 19 in the classpath, using modern compatibility layer
[INFO ] [15-Jun-2020 18:28:30.034] [           main Thread]-[         com.datastax.driver.core.Native.<clinit>                 (){115}]- Could not load JNR C Library, native system calls through this library will not be available (set this logger level to DEBUG to see the full stack trace).
[INFO ] [15-Jun-2020 18:28:30.035] [           main Thread]-[   com.datastax.driver.core.ClockFactory.newInstance              (){ 55}]- Using java.lang.System clock to generate timestamps.
[INFO ] [15-Jun-2020 18:28:30.146] [           main Thread]-[      com.datastax.driver.core.NettyUtil.<clinit>                 (){ 83}]- Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[INFO ] [15-Jun-2020 18:28:30.452] [           main Thread]-[er.core.policies.DCAwareRoundRobinPolicy.init                     (){ 95}]- Using data-center name 'datacenter1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[INFO ] [15-Jun-2020 18:28:30.453] [           main Thread]-[        com.datastax.driver.core.Cluster.init                     (){1568}]- New Cassandra host /127.0.0.1:9042 added
[INFO ] [15-Jun-2020 18:28:30.504] [           main Thread]-[.examples.Tester$CassandraDataSourceImpl.createSession            (){164}]- Created Cassandra session successfully.........................
[INFO ] [15-Jun-2020 18:28:30.504] [           main Thread]-[.examples.Tester$CassandraDataSourceImpl.getSession               (){181}]- **************Session is created successfully, Session objectcom.datastax.driver.core.SessionManager@7674b62c
[INFO ] [15-Jun-2020 18:28:30.510] [           main Thread]-[ni.scheduler.dao.CassandraTaskRepository.<init>                   (){ 84}]- Created Cassandra Mapping Manager successfully.........................
[INFO ] [15-Jun-2020 18:28:30.511] [           main Thread]-[ni.scheduler.dao.CassandraTaskRepository.build                    (){180}]- Creating scheduler with configuration: threads=5, pollInterval=10s, heartbeat=300s enable-immediate-execution=true, name=AIPLLTH226
[INFO ] [15-Jun-2020 18:28:30.514] [           main Thread]-[ithub.anilganipineni.scheduler.Scheduler.start                    (){ 97}]- Starting scheduler.
[WARN ] [15-Jun-2020 18:28:30.567] [uster1-worker-3 Thread]-[        com.datastax.driver.core.Cluster.addPrepared              (){2223}]- Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query=' select * from scheduled_tasks LIMIT 2000 '
